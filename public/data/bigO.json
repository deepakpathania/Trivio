[
    { "id": 1, "question": "What is the time complexity of binary search?", "options": ["O(n)", "O(log n)", "O(n log n)", "O(1)"], "answerIndex": 1 },
    { "id": 2, "question": "What is the worst-case time complexity of quicksort?", "options": ["O(n)", "O(n²)", "O(n log n)", "O(log n)"], "answerIndex": 1 },
    { "id": 3, "question": "What is the space complexity of merge sort?", "options": ["O(1)", "O(log n)", "O(n)", "O(n log n)"], "answerIndex": 2 },
    { "id": 4, "question": "What is the average-case time complexity of insertion sort?", "options": ["O(n)", "O(n²)", "O(log n)", "O(n log n)"], "answerIndex": 1 },
    { "id": 5, "question": "What is the time complexity of accessing an element in an array by index?", "options": ["O(1)", "O(log n)", "O(n)", "O(n log n)"], "answerIndex": 0 },
    { "id": 6, "question": "What is the time complexity of inserting at the head of a singly linked list?", "options": ["O(1)", "O(n)", "O(log n)", "O(n²)"], "answerIndex": 0 },
    { "id": 7, "question": "What is the time complexity of deleting the tail node in a doubly linked list, given pointer to tail?", "options": ["O(1)", "O(n)", "O(log n)", "O(n log n)"], "answerIndex": 0 },
    { "id": 8, "question": "What is the average-case time complexity of hash table search (with good hashing)?", "options": ["O(1)", "O(n)", "O(log n)", "O(n log n)"], "answerIndex": 0 },
    { "id": 9, "question": "What is the worst-case time complexity of hash table search (with chaining)?", "options": ["O(1)", "O(n)", "O(log n)", "O(n log n)"], "answerIndex": 1 },
    { "id": 10, "question": "What is the time complexity of enqueue operation in a queue implemented with arrays (circular buffer)?", "options": ["O(1)", "O(n)", "O(log n)", "O(n log n)"], "answerIndex": 0 },
    { "id": 11, "question": "What is the time complexity of popping from a stack?", "options": ["O(1)", "O(n)", "O(log n)", "O(n²)"], "answerIndex": 0 },
    { "id": 12, "question": "What is the time complexity of breadth-first search in a graph with V vertices and E edges?", "options": ["O(V + E)", "O(V²)", "O(E log V)", "O(E²)"], "answerIndex": 0 },
    { "id": 13, "question": "What is the time complexity of depth-first search in a graph?", "options": ["O(V + E)", "O(V²)", "O(E log V)", "O(E²)"], "answerIndex": 0 },
    { "id": 14, "question": "What is the time complexity of Dijkstra’s algorithm using a binary heap?", "options": ["O(E + V log V)", "O(V²)", "O(E log V)", "O(E²)"], "answerIndex": 2 },
    { "id": 15, "question": "What is the time complexity of Bellman-Ford algorithm?", "options": ["O(VE)", "O(V + E)", "O(V²)", "O(E log V)"], "answerIndex": 0 },
    { "id": 16, "question": "What is the time complexity of Floyd-Warshall algorithm?", "options": ["O(V³)", "O(V²)", "O(VE)", "O(E log V)"], "answerIndex": 0 },
    { "id": 17, "question": "What is the average-case time complexity of quicksort?", "options": ["O(n²)", "O(n log n)", "O(n)", "O(log n)"], "answerIndex": 1 },
    { "id": 18, "question": "What is the time complexity of finding the minimum element in an unsorted array?", "options": ["O(1)", "O(n)", "O(log n)", "O(n log n)"], "answerIndex": 1 },
    { "id": 19, "question": "What is the time complexity of removing an arbitrary element from a binary search tree?", "options": ["O(log n)", "O(n)", "O(1)", "O(n log n)"], "answerIndex": 0 },
    { "id": 20, "question": "What is the time complexity of inserting into a binary search tree?", "options": ["O(log n)", "O(n)", "O(1)", "O(n log n)"], "answerIndex": 0 },
    { "id": 21, "question": "What is the time complexity of finding height of a balanced binary search tree?", "options": ["O(log n)", "O(n)", "O(1)", "O(n log n)"], "answerIndex": 0 },
    { "id": 22, "question": "What is the time complexity of in-order traversal of a binary tree?", "options": ["O(n)", "O(log n)", "O(n log n)", "O(1)"], "answerIndex": 0 },
    { "id": 23, "question": "What is the time complexity of heapify (building a heap from an array)?", "options": ["O(n)", "O(n log n)", "O(log n)", "O(n²)"], "answerIndex": 0 },
    { "id": 24, "question": "What is the time complexity of inserting into a binary heap?", "options": ["O(log n)", "O(n)", "O(1)", "O(n log n)"], "answerIndex": 0 },
    { "id": 25, "question": "What is the time complexity of deleting the root from a binary heap?", "options": ["O(log n)", "O(n)", "O(1)", "O(n log n)"], "answerIndex": 0 },
    { "id": 26, "question": "What is the time complexity of counting sort?", "options": ["O(n + k)", "O(n log n)", "O(n²)", "O(k log n)"], "answerIndex": 0 },
    { "id": 27, "question": "What is the time complexity of radix sort (for d digits)?", "options": ["O(d(n + k))", "O(n log n)", "O(n²)", "O(kn)"], "answerIndex": 0 },
    { "id": 28, "question": "What is the time complexity of bucket sort (average case)?", "options": ["O(n + k)", "O(n log n)", "O(n²)", "O(k log n)"], "answerIndex": 0 },
    { "id": 29, "question": "What is the time complexity of prime sieve of Eratosthenes?", "options": ["O(n log log n)", "O(n)", "O(n²)", "O(log n)"], "answerIndex": 0 },
    { "id": 30, "question": "What is the time complexity of checking if a key exists in a max-heap?", "options": ["O(n)", "O(log n)", "O(1)", "O(n log n)"], "answerIndex": 0 },
    { "id": 31, "question": "What is the time complexity of merging two sorted arrays of length m and n?", "options": ["O(m + n)", "O(m log n)", "O(n log m)", "O(mn)"], "answerIndex": 0 },
    { "id": 32, "question": "What is the time complexity of the two-pointer technique on a sorted array?", "options": ["O(n)", "O(n log n)", "O(log n)", "O(n²)"], "answerIndex": 0 },
    { "id": 33, "question": "What is the space complexity of storing a linked list?", "options": ["O(n)", "O(1)", "O(log n)", "O(n log n)"], "answerIndex": 0 },
    { "id": 34, "question": "What is the time complexity of BFS on a tree?", "options": ["O(n)", "O(log n)", "O(n log n)", "O(n²)"], "answerIndex": 0 },
    { "id": 35, "question": "What is the time complexity of DFS on a tree?", "options": ["O(n)", "O(log n)", "O(n log n)", "O(n²)"], "answerIndex": 0 },
    { "id": 36, "question": "What is the time complexity of finding the maximum element in a heap?", "options": ["O(1)", "O(log n)", "O(n)", "O(n log n)"], "answerIndex": 2 },
    { "id": 37, "question": "What is the time complexity of adding an edge in an adjacency list representation?", "options": ["O(1)", "O(n)", "O(log n)", "O(E)"], "answerIndex": 0 },
    { "id": 38, "question": "What is the time complexity of finding all neighbors of a vertex in adjacency list?", "options": ["O(deg(v))", "O(V)", "O(log V)", "O(E)"], "answerIndex": 0 },
    { "id": 39, "question": "What is the time complexity of copying a balanced binary search tree?", "options": ["O(n)", "O(n log n)", "O(log n)", "O(n²)"], "answerIndex": 0 },
    { "id": 40, "question": "What is the time complexity of computing fibonacci numbers with dynamic programming (DP)?", "options": ["O(n)", "O(2^n)", "O(log n)", "O(n log n)"], "answerIndex": 0 },
    { "id": 41, "question": "What is the time complexity of naive recursive fibonacci?", "options": ["O(2n)", "O(2^n)", "O(n)", "O(n²)"], "answerIndex": 1 },
    { "id": 42, "question": "What is the time complexity of checking if a string is a palindrome using two pointers?", "options": ["O(n)", "O(log n)", "O(n²)", "O(1)"], "answerIndex": 0 },
    { "id": 43, "question": "What is the time complexity of splitting a string of length n into characters?", "options": ["O(n)", "O(log n)", "O(n log n)", "O(n²)"], "answerIndex": 0 },
    { "id": 44, "question": "What is the time complexity of parsing a JSON object of size n?", "options": ["O(n)", "O(n^2)", "O(log n)", "O(n log n)"], "answerIndex": 0 },
    { "id": 45, "question": "What is the time complexity of matrix multiplication (naive)?", "options": ["O(n³)", "O(n²)", "O(n log n)", "O(log n)"], "answerIndex": 0 },
    { "id": 46, "question": "What is the time complexity of Strassen’s matrix multiplication?", "options": ["O(n^{2.807})", "O(n³)", "O(n²)", "O(n log n)"], "answerIndex": 0 },
    { "id": 47, "question": "What is the space complexity of storing an adjacency matrix for a graph with V vertices?", "options": ["O(V²)", "O(V + E)", "O(E)", "O(V)"], "answerIndex": 0 },
    { "id": 48, "question": "What is the time complexity of checking connectivity using Union-Find with path compression?", "options": ["O(α(n))", "O(log n)", "O(n)", "O(1)"], "answerIndex": 0 },
    { "id": 49, "question": "What is the time complexity of union operation in Union-Find with union by rank?", "options": ["O(α(n))", "O(log n)", "O(n)", "O(1)"], "answerIndex": 0 },
    { "id": 50, "question": "What is the time complexity of the two-sum problem using a hash map?", "options": ["O(n)", "O(n²)", "O(log n)", "O(1)"], "answerIndex": 0 }
  ]